1. Подготовка к запуску
- Создание корневой папки для тестов например /tests
- Запуск ./_prepare/mount.sh который создаст линк папки _db на папку c XML /usr/local/csn/db/ipm на сервере IPM
- Выдача прав файлам *.sh, если права на выполнение отсутствуют. chmod +x *.sh ipm_test

2. Описание струтктуры каталога
DIR _db				- Папка для ссылкой на БД на сервере.
DIR _prepare  			- папка со скриптами, необходимымы перед выполнением тестирования.
	FILE mount.sh		- Файл для создания линка папки _db на папку c XML /usr/local/csn/db/ipm на сервере KSN Frontend
DIR testcase.<название_теста>  	- папка с файлами для проведения теста 
	FILE content_info.xml	- XML файл с контентом
	FILE geo_ip.xml		- XML файл с ip
	FILE ipm_request.xml	- XML файл с запросом
	FILE respоnse		- файл, содержащий ожидаемый ответом на запрос
	FILE desc		- файл, содержащий описание теста
FILE create_testplan.sh		- файл для создания тестплана из всех тестов
FILE ipm_server.dat		- файл с ip адресом IPM сервера. При необходимости можно изменить
FILE ipm_test			- утлита для отправки запроса на сервер
FILE parameters.dat		- файл с параметрами для проведения тестирования
	debug=off		- параметр для включения/выключения расширенного логирования. Выводится в консоль
	testing=on		- параметр для включения/выключения режима тестирования. 
				- on - режим включен, ответ от сервера сравнивается с ожидаемым
				- off - режим выключен, ответ от сервера просто печатается в консоль
	sleep=5			- параметр для указания времени ожидания для того, чтобы сервер успел подхватить новые файлы БД
FILE read.me			- Этот файл со справкой
FILE run_test.sh		- Служебный файл с функцией
FILE start_tests.sh		- Файл для запуска тестирования
FILE testplan.dat		- файл с тестпланом

3. Запуск теста
- Создать или исправить файл с тестпланом
	 Создать файл с тестпланом из всех тестов можно выполнив файл ./create_testplan.sh
	 Или вручную удалить/добавить необходимые названия папок.
- Настроить файл с параметрами
	ipm_server.dat
	parameters.dat
- Запустить тест, выполнить файл ./start_tests.sh

4. Результаты тестирования
- После окончания тестирования создастя файл test_<дата_запуска_тестирования>.log
- В консоль выведется информация о количестве ошибок за времея тестирования.
  